#!/usr/bin/env bash
set -eax

if [[ -f "$(dirname $0)/../contrib/config/sh" ]]; then
  source "$(dirname $0)/../contrib/config/sh"
fi

export NAME="$("$JQ" -r .name package.json)"
export AUTHOR="$("$JQ" -r .author package.json)"
export IMAGE="${REGISTRY:-"docker.io"}/$AUTHOR/$NAME:${DOCKER_TAG:-latest}"
export OCI_HOST="${OCI_HOST:-podman}"
export OCI_BUILDER="${OCI_BUILDER:-"${OCI_HOST}"}"

if [[ "$OCI_BUILDER" == "podman" ]]; then
  export OCI_BUILDER="buildah"
fi;

ARCHITECTURES=(
  'amd64'
  '386'
  'arm64'
  'ppc64le'
  'riscv64'
  's390x'
)

if [[ -f "ARCHITECTURES" ]]; then
  ARCHITECTURES=()
  while IFS= read -r arch; do
    ARCHITECTURES+=("$arch")
  done < ARCHITECTURES
fi;

buildWith() {
  "$OCI_BUILDER" build $@ -t "$IMAGE" -f Containerfile .
}

if [[ "$LIMIT_TO_ARCH" == "current" ]]; then
  echo "Building for current architecture ($(uname -m))"
  buildWith $@
else
  for architecture in "${ARCHITECTURES[@]}"; do
    if [[ "$LIMIT_TO_ARCH" == "$architecture" ]] || [[ "$LIMIT_TO_ARCH" == "any" ]]; then
      echo 'Building for architecture:' "$architecture"
      buildWith $@ --arch "$architecture"
    fi
  done;
fi
